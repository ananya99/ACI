# @package _global_
# We need to specify the package as _global_ so that hydra knows to place all the
# overridden configs defined here at the root of the config

defaults:
  # Here we define all the mazes we want to use in this experiment in a list.
  # Note the override keyword; this is necessary since we define this attribute as a
  # requirement in the default file listed above
  # Also note that you can't include the same maze twice; it will overwrite the previous
  # definition since the mazes attribute is a dictionary
  # _group_ is a special keyword which evaluates to the group of the config file,
  # as in /env/mazes/I_MAZE_STATIC@_group_.I_MAZE_STATIC will evaluate to
  # env.mazes.I_MAZE_STATIC. This is equivalent to
  # /env/mazes/I_MAZE_STATIC@_group_._name_.
  - /env/mazes/I_MAZE_STATIC@_group_.I_MAZE_STATIC
  - /env/mazes/I_MAZE_STATIC@_group_.I_MAZE_STATIC2
  - /env/mazes/I_MAZE_STATIC@_group_.I_MAZE_STATIC3
  - /env/mazes/I_MAZE_STATIC@_group_.I_MAZE_STATIC4

  # Same here; we define all the animals we want to use (in this case, just one)
  - /env/animals/point@_group_.point_0

  # We also need to define the eyes for the animal. We'll use the default eye to serve
  # as the base for the single eye.
  # This basically says load "eye.yaml" in ./env/animals/eyes and place it at
  # env.animals.point_0.eyes.eye_0 in the config
  - /env/animals/eyes/eye@env.animals.point_0.eyes.eye_0
  # Same idea except now the eye is at env.animals.point_0.eyes.eye_1
  - /env/animals/eyes/eye@env.animals.point_0.eyes.eye_1

  # We then include the default config (located at in the same folder as this file
  # i.e. configs/exp/maze_exp.yaml). This file defines required attributes we'll need
  # to specify here to set things up correctly. This _must_ come after the above
  # includes because it defines default values for specific config files and the above
  # files use those as interpolations in their default lists.
  - maze_exp

  # Finally, we include _self_ such that all the configs defined herein will override
  # the files we've included above. This actually isn't necessary as hydra will
  # automatically append _self_ to the end of the list of defaults.
  - _self_

env:
  animals:
    point_0:
      # Set the initial yaw to -pi / 2. Indices represent indices in the qpos array.
      # The values should be between [-1, 1]. Mapped to the actual range of the joint
      # later.
      initial_qpos:
        2: -0.5

      eyes:
        eye_0:
          resolution: [10, 10]
          fov: [45, 20]
          coord: [10, 0]
        eye_1:
          resolution: [1, 1]
          fov: [45, 20]
          coord: [10, 0]

# This is an example of how to use the constant action wrapper
# NOTE: This is applied _after_ base.yaml, so the wrappers are appended after all
# previously defined wrappers
trainer:
  wrappers:
    constant_action_wrapper:
      _target_: cambrian.utils.wrappers.MjCambrianConstantActionWrapper
      _partial_: true
      constant_actions:
        0: -1.0
        1: -0.5
