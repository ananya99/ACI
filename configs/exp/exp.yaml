# @package _global_

defaults:
  # Below is how mazes are specified. Each maze should include the following in it's defaults list:
  # - /env/mazes@_here_: ${env/mazes}
  # - _self_
  # This refers to the default maze configuration defined below. At runtime, the user
  # can then specify a different default maze configuration, if desired. Furthermore,
  # the order below is important: mazes must come first because then the snippet
  # mentioned earlier (specifically the ${env/mazes/default} part) won't be
  # resolved correctly. The exp file you write should therefore define the mazes
  # _before_ including the default file (this file).
  # To specify a maze or multiple, you may run the following:
  # python <script> env/mazes=MAZE # defines one maze only
  # OR
  # python <script> env/mazes=[MAZE1,MAZE2,...]
  # In the yaml exp file, you can also specify the mazes as follows:
  # Option 1:
  # - /env/mazes: <MAZE>
  # Option 2:
  # - /env/mazes: [MAZE1, MAZE2, ...]
  # or
  # - /env/mazes:
  #   - <MAZE1>
  #   - <MAZE2>
  #   - ...
  # Option 3:
  # - /env/mazes/MAZE1@env.mazes.CUSTOM_NAME
  - /env/mazes: maze

  # Similar to the mazes, you must also specify the animal configuration.
  - /env/animals: animal
  - /env/animals/eyes: eye
  - /env/animals/eyes/optics: optics

  # Simular to mazes, you must also specify the object configuration.
  - /env/objects: object

  # NOTE: there is a bug in OmegaConf that doesn't allow optional dataclass objects
  # that are inherited to be specified via the defaults list. For instance,
  # if you have the following structured configs:
  #
  # @dataclass
  # class A:
  #   a: Optional[int] = None
  #
  # @dataclass
  # class B(A):
  #   pass
  #
  # And you define B in a config file where you specify it's config group such that
  # OmegaConf thinks it's a structured config, a will always be None unless you
  # explicitly set it in B. Like if you set a default value to it in A, that won't carry
  # over to B. This is the case for renderer since it's Optional. Therefore, we define
  # it here rather than the env config.
  - /env/renderer: bev
