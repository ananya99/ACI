# @package _global_

defaults:
  # Below is how mazes are specified. Each maze should include the following in it's defaults list:
  # - /env/mazes@_here_: ${env/mazes}
  # - _self_
  # This refers to the default maze configuration defined below. At runtime, the user
  # can then specify a different default maze configuration, if desired. Furthermore,
  # the order below is important: mazes must come first because then the snippet
  # mentioned earlier (specifically the ${env/mazes/default} part) won't be
  # resolved correctly. The exp file you write should therefore define the mazes
  # _before_ including the default file (this file).
  # To specify a maze or multiple, you may run the following:
  # python <script> env/mazes=MAZE # defines one maze only
  # OR
  # python <script> env/mazes=[MAZE1,MAZE2,...]
  # In the yaml exp file, you can also specify the mazes as follows:
  # Option 1:
  # - /env/mazes: <MAZE>
  # Option 2:
  # - /env/mazes: [MAZE1, MAZE2, ...]
  # or
  # - /env/mazes:
  #   - <MAZE1>
  #   - <MAZE2>
  #   - ...
  # Option 3:
  # - /env/mazes/MAZE1@env.mazes.CUSTOM_NAME
  - /env/mazes: maze

  # Load the default exp config
  - exp

  # Override the default environment to be a maze_env. We are using mazes above, and so
  # we need to specify the environment base which corresponds to the maze environment.
  # This will also register the env config group as an MjCambrianMazeEnvConfig
  - override /env: maze_env
