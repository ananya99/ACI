# @package _global_

defaults:
  - /exp/tasks/detection

  # Reset the agent and eyes so that only the overrides specified in this config will
  # override the loaded config
  - override /env/agents@env.agents.agent: agent_empty
  - override /env/agents/eyes@env.agents.agent.eyes.eye: eye_empty

env:
  mazes:
    maze:
      map: |-
        [
          [1, 1, 1, 1, 1, 1,   1, 1, 1],
          [1, 0, 0, 0, 0, 0,   0, 0, 1],
          [1, 0, 0, 0, 0, 0,   0, 0, 1],
          [1, 0, 0, 0, 0, 0,   0, 0, 1],
          [1, 0, 0, 0, 0, 0, R:O, 0, 1],
          [1, R, 0, 0, 0, 0,   0, 0, 1],
          [1, 0, 0, 0, 0, 0, R:O, 0, 1],
          [1, 0, 0, 0, 0, 0,   0, 0, 1],
          [1, 0, 0, 0, 0, 0,   0, 0, 1],
          [1, 0, 0, 0, 0, 0,   0, 0, 1],
          [1, 1, 1, 1, 1, 1,   1, 1, 1],
        ]

  agents:
    agent:
      _target_: cambrian.utils.config.utils.merge_with_kwargs
      _recursive_: false
      config: "???"

      # Set the initial yaw to -pi / 4. This makes the agent face to the left which
      # makes the path the agent follows less perfect.
      init_quat: ["${eval:'math.cos(-math.pi/4)'}", 0, 0, "${eval:'math.sin(-math.pi/4)'}"]

      use_privileged_action: true

      instance:
        _target_: cambrian.agents.MjCambrianAgentPointMazeOptimal
        _partial_: true
        target: goal # assumes goal, can change via overrides
        use_optimal_trajectory: false

    goal:
      custom:
        # Rotate the yaw of the texture so that it is facing the agent
        euler: 0 0 90
