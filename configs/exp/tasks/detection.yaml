# @package _global_

# This task includes a goal and adversary. The goal and adversary are solid colors
# (green and red, respectively).

defaults:
  # Use one maze for the time being
  - /env/mazes/OPEN@env.mazes.OPEN

  # Adds two objects to the environment: a goal and an adversarial object
  - /env/objects@env.objects.goal: goal
  - /env/objects@env.objects.adversary: adversary

  # Use the maze_exp config as the base
  - /exp/maze_exp

  # Define one animal
  - /env/animals@env.animals.animal_0: ${env/animals}
  - /env/animals/eyes@env.animals.animal_0.eyes.eye: ${env/animals/eyes}
  - override /env/animals: point

env:
  reward_fn:
    constant_penalty:
      _target_: cambrian.envs.reward_fns.constant_reward
      _partial_: true
      reward: -0.1

    reward_euclidean_delta_to_goal:
      _target_: cambrian.envs.reward_fns.reward_euclidean_delta_to_objects
      _partial_: true
      factor: 0.25
      objects: [goal]

  truncation_fn:
    truncate_if_close_to_adversary:
      _target_: cambrian.envs.truncation_fns.truncate_if_close_to_object
      _partial_: true
      objects: [adversary]
      distance_threshold: 2.0
    
  termination_fn:
    # Terminate (i.e. succeed) if the agent is close to the goal
    terminate_if_close_to_goal:
      _target_: cambrian.envs.termination_fns.terminate_if_close_to_object
      _partial_: true
      objects: [goal]
      distance_threshold: 2.0