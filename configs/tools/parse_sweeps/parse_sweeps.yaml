# @package _global_

defaults:
  - /ParseSweepsConfig

  - load_eval_fitness_fn: from_monitor

  - _self_

folder: "???"
output: ${path:${folder},parse_sweep,${combine_fn.fitness_method}}
pkl: "data.pkl"

force: False
plot: False
quiet: False
debug: False

ignore: []

show_plots: False
save_plots: True

load_config_fn:
  _target_: parse_sweeps.load_config
  _partial_: true
load_train_fitness_fn:
  _target_: parse_sweeps.load_fitness_from_monitor
  _partial_: true
  filename: "monitor.csv"
load_monitor_fn:
  _target_: parse_sweeps.load_monitor
  _partial_: true
  filename: "monitor.csv"
load_evaluations_fn:
  _target_: parse_sweeps.load_monitor
  _partial_: true
  filename: "eval_monitor.csv"
combine_fn:
  _target_: parse_sweeps.combine
  _partial_: true
  fitness_method: MIN

overrides: {}

dry_run: False

hydra:
  run:
    dir: ${output}
  sweep:
    dir: ${path:logs,${now:%Y-%m-%d},${hydra_select:job.name}}
  job:
    name: parse_evos
  job_logging:
    version: 1
    formatters:
      simple:
        format: "%(levelname)-8s | %(module)s.%(funcName)s :: %(message)s"
    loggers:
      cambrian:
        level: INFO
        handlers: [stdout, stderr]
        propagate: false
    root:
      level: INFO
      handlers: [stdout, stderr]
    handlers:
      stdout:
        class: cambrian.utils.logger.MjCambrianTqdmStreamHandler
        formatter: simple
        stream: ext://sys.stdout
        level: DEBUG
        filters:
          - max_level
      stderr:
        class: cambrian.utils.logger.MjCambrianTqdmStreamHandler
        formatter: simple
        stream: ext://sys.stderr
        level: WARNING
    filters:
      max_level:
        (): cambrian.utils.logger.MjCambrianLoggerMaxLevelFilter
        max_level: INFO
    disable_existing_loggers: false
