[tool.poetry]
name = "cambrian"
version = "0.0.0"
authors = ["Camera Culture <a2cc@media.mit.edu>"]
description = "Artificial Cambrian Intelligence"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.11,<4.0"
stable_baselines3 = { version = "^2.4.0", extras = ["extra"] }
pettingzoo = "^1.24.3"
mujoco = "^3.2.5"
pyyaml = "^6.0.2"
scipy = "^1.14.1"
scikit-image = "^0.24.0"
imageio = "^2.36.0"
opencv-python = "^4.10.0.84"
fcmaes = "^1.6.11"
tqdm = "^4.67.0"
seaborn = "^0.13.2"
SciencePlots = "^2.1.1"
nevergrad = "^1.0.3"
bayesian-optimization = "^1.4.0"

hydra_zen = { git = "https://github.com/mit-ll-responsible-ai/hydra-zen.git" }
omegaconf = { git = "https://github.com/omry/omegaconf.git" }
hydra-core = { git = "https://github.com/AaronYoung5/hydra.git" }
hydra-nevergrad-sweeper = { git = "https://github.com/AaronYoung5/hydra.git", rev = "main", subdirectory = "plugins/hydra_nevergrad_sweeper" }
hydra-submitit-launcher = { git = "https://github.com/AaronYoung5/hydra.git", rev = "main", subdirectory = "plugins/hydra_submitit_launcher" }
hydra-joblib-launcher = { git = "https://github.com/AaronYoung5/hydra.git", rev = "main", subdirectory = "plugins/hydra_joblib_launcher" }

[tool.poetry.dev-dependencies]
pip = "^24.2"
black = "^24.8.0"
flake8 = "^7.1.1"
Flake8-pyproject = "^1.2.3"
isort = "^5.13.2"
pyright = "^1.1.381"
pytest = "^8.3.3"
pre-commit = "^3.8.0"

[tool.poetry.group.docs.dependencies]
sphinx = "7.2.6"
furo = "2024.8.6"
sphinx-autoapi = "3.4.0"
sphinx-autobuild = "2024.10.3"
sphinx-copybutton = "0.5.2"
myst-parser = "4.0.0"
sphinxcontrib-video = "0.3.1"
sphinxcontrib-googleanalytics = "0.4"

[tool.black]
line-length = 88
target-version = ['py312']

[tool.pylint."messages control"]
ignore = ["setup.py", "__init__.py"]
disable = "all"
enable = [
    "empty-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "missing-module-docstring",
]

[tool.isort]
profile = "black"
known_first_party = ["cambrian"] # see package configuration below

[tool.flake8]
ignore = ['E203', 'W503']
per-file-ignores = ['__init__.py:F401']
max-line-length = 88
count = true

# [tool.pyright]
# reportMissingTypeArgument = true # Report generic classes used without type arguments
strictListInference = true # Use union types when inferring types of lists elements, instead of Any

[tool.poetry-monorepo-dependency-plugin]
enable = true

[tool.setuptools_scm]
write_to = "cambrian/_version.py"

[build-system]
requires = ["poetry-core>=1.0.8"]
build-backend = "poetry.core.masonry.api"
